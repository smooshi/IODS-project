data <- fread("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt")
data <- read("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt")
data <- read("JYTOPKYS3-data.txt")
data <- read.table("JYTOPKYS3-data.txt")
data()
data <- read.table("JYTOPKYS3-data.txt")
data
data <- read.csv("JYTOPKYS3-data.txt")
data
data <- read.delim("JYTOPKYS3-data.txt")
setwd("~/GitHub/IODS-project/data")
data <- read.delim("JYTOPKYS3-data.txt")
data
data <- read.delim("JYTOPKYS3-data.txt",header = TRUE, sep = "\t", dec = ".")
data
View(data)
head(data)
summary(data)
dim(data)
structure((data))
?structure
dim(data)
?dim
View(data)
structure(data)
?structure
#Load tab delimited file:
data <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",header = TRUE, sep = "\t")
#Load tab delimited file:
data <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",header = TRUE, sep = "\t")
data
#Dimensions are 183 rows, 60 columns (183 observations, 60 variables)
dim(data)
str(data)
analysis <- c(data$gender, data$Age, data$Attitude, data$Deep, data$stra, data$surf, data$Points)
analysis
analysis <- table(data$gender, data$Age, data$Attitude, data$Deep, data$stra, data$surf, data$Points)
analysis <- data.table(data$gender, data$Age, data$Attitude, data$Deep, data$stra, data$surf, data$Points)
analysis <- data.frame(data$gender, data$Age, data$Attitude, data$Deep, data$stra, data$surf, data$Points)
data$Deep
View(data)
analysis <- data.frame(data$gender, data$Age, data$Attitude, data$Points)
names(data)
deep <- data.frame(data, D03+D11+D19+D27+D07+D14+D22+D30+D06+D15+D23+D31)
analysis$Deep <- data$[D03+D11+D19+D27+D07+D14+D22+D30+D06+D15+D23+D31]
?subset
analysis$Deep <- subset[data, D03+D11+D19+D27+D07+D14+D22+D30+D06+D15+D23+D31]
analysis$Deep <- rowMeans(select(data, one_of(deep_questions)))
#name: smooshi
#date: 4.11.2018
#description: exersize 2
library(dplyr)
analysis$Deep <- rowMeans(select(data, one_of(deep_questions)))
#name: smooshi
#date: 4.11.2018
#description: exersize 2
library(dplyr)
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
analysis$Deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
analysis$Surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
analysis$Stra <- rowMeans(strategic_columns)
install.packages("dplyr")
#name: smooshi
#date: 4.11.2018
#description: exersize 2
library(dplyr)
install.packages("dplyr")
#name: smooshi
#date: 4.11.2018
#description: exersize 2
library(dplyr)
#Load tab delimited file:
data <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",header = TRUE, sep = "\t")
#Dimensions are 183 rows, 60 columns (183 observations, 60 variables)
dim(data)
#All others are Int observatons, gender is a factor F or M
str(data)
analysis <- data.frame(data$gender, data$Age, data$Attitude, data$Points)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
analysis$Deep <- rowMeans(deep_columns)
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(data, one_of(deep_questions))
analysis$Deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(data, one_of(surface_questions))
analysis$Surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
analysis$Stra <- rowMeans(strategic_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(data, one_of(strategic_questions))
analysis$Stra <- rowMeans(strategic_columns)
?wd
setwd("~/GitHub/IODS-project")
write.csv("~/data/learning2014.csv")
write.csv("~/data/learning2014.csv")
write.csv(analysis, "~/data/learning2014.csv")
write.csv(analysis, file="~/data/learning2014.csv")
write.csv(analysis, file="~/GitHub/IODS-project/data/learning2014.csv")
test <- read.table("~/GitHub/IODS-project/data/learning2014.csv",header = TRUE, sep = "\t")
test
test <- read.table("~/GitHub/IODS-project/data/learning2014.csv",header = TRUE, sep = "\t")
dim(test)
str(test)
analysis
colnames(analysis)
colnames(analysis) <- c("Gender", "Age", "Attitude", "Points", "Deep", "Surf", "Stra")
names(analysis)
analysis
?write.csv
write.csv(analysis, file="~/GitHub/IODS-project/data/learning2014.csv", sep = "\t")
write.csv(analysis, file="~/GitHub/IODS-project/data/learning2014.csv")
test <- read.table("~/GitHub/IODS-project/data/learning2014.csv",header = TRUE, sep = "\t")
#Dimensions are 183 rows, 60 columns (183 observations, 60 variables)
dim(data)
test <- read.table("~/GitHub/IODS-project/data/learning2014.csv",header = TRUE, sep = " ")
head(test)
str(test)
View(test)
test <- read.table("~/GitHub/IODS-project/data/learning2014.csv",header = TRUE, sep = ",")
head(test)
str(test)
View(test)
analysis
j
j
#Working Director
setwd("~/GitHub/IODS-project")
write.csv(analysis, file="~/GitHub/IODS-project/data/learning2014.csv", row.names = FALSE)
test <- read.table("~/GitHub/IODS-project/data/learning2014.csv", header = TRUE, sep = ",")
head(test)
str(test)
data <- read.table("~/GitHub/IODS-project/data/learning2014.csv", header = TRUE, sep = ",")
data <- read.table("~/GitHub/IODS-project/data/learning2014.csv", header = TRUE, sep = ",")
head(data)
names(data)
dim(data)
summary(data)
summary(data)
pie(data$Gender)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
summary(data)
pie(data$Gender)
library(ggplot2)
summary(data)
pie(data$Gender)
library(ggplot2)
summary(data)
ggplot(data=data, aes(x=factor(1),
y=Summary,
fill = factor(Gender)
))
library(ggplot2)
summary(data)
ggplot(data=data, aes(x="", y=Gender, fill = factor(Gender)
))
library(ggplot2)
summary(data)
ggplot(data, aes(x="", y=Gender, fill = Gender
))
library(ggplot2)
summary(data)
ggplot(data, aes(x=factor(Gender), y=Gender, fill = Gender
))
library(ggplot2)
summary(data)
ggplot(data, aes(x=factor(Gender), y=Gender, fill = Gender))+coord_polar(theta="y")
library(ggplot2)
summary(data)
ggplot(data, aes(x=factor(1), fill = Gender))+coord_polar(theta="y")
library(ggplot2)
summary(data)
ggplot(data, aes(x=factor(Gender), fill = Gender))+coord_polar(theta="y")
data$Gender
library(ggplot2)
summary(data)
ggplot(data, aes(x=factor(1), fill = factor(Gender)))+geom_bar(width=1)+coord_polar(theta="y")
library(ggplot2)
summary(data)
ggplot(data, aes(x=factor(1), fill = factor(Gender)))+geom_bar(width=1)+coord_polar(theta="y")+theme_void()
library(ggplot2)
summary(data)
#Pie chart of gender
ggplot(data, aes(x=factor(1), fill = factor(Gender)))+geom_bar(width=1)+coord_polar(theta="y")+theme_void()
#Histogram of Age
qplot(data$Age, geom="histogram")
#Histogram of Age
qplot(data$Points, geom="histogram")
#Histogram of Age
lm(attitude~points)
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count") +
xlim(c(18,52)) +
ylim(c(0,30))
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(10, 50, by = 5),
fill="green",
alpha = .2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count") +
xlim(c(18,52)) +
ylim(c(0,30))
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(10, 50, by = 2),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count") +
xlim(c(18,52)) +
ylim(c(0,30))
#Boxplot of gender x points
ggplot(data, aes(x=Gender, y=Points)) +
geom_boxplot()
#Boxplot of gender x points
ggplot(data, aes(x=Gender, y=Points, fill=Gender)) +
geom_boxplot()
#Pie chart of gender
ggplot(data, aes(x=factor(1), fill = factor(Gender)))+geom_bar(width=1)+coord_polar(theta="y")+theme_void()
#Histogram of Age
qplot(data$Age, geom="histogram")
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(10, 50, by = 2),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count") +
xlim(c(18,52)) +
ylim(c(0,30))
library(ggplot2)
summary(data)
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(15, 50, by = 2),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count") +
xlim(c(18,52)) +
ylim(c(0,30))
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(15, 50, by = 2),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(15, 60, by = 2),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(15, 55, by = 2),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(15, 55, by = 5),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
#Histogram of Age
ggplot(data=data, aes(data$Age)) +
geom_histogram(breaks=seq(15, 55, by = 3),
fill="salmon") +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
#Histogram of Age
qplot(data$Age, geom="histogram")+labs(title="Histogram for Age") +
labs(x="Age", y="Count")
#Histogram of Age
qplot(data$Age, geom="histogram")+labs(title="Histogram for Age") +
labs(x="Age", y="Count")
#Boxplot of gender and points
ggplot(data, aes(x=Gender, y=Points, fill=Gender)) +
geom_boxplot()
#Linear regression of Attitude and Points
ggplot(data, aes(x = Attitude, y = Points)) + geom_point() + geom_smooth(method="lm")+labs(title="Linear regression of age and points")
library(GGally)
install.packages("Gally")
library(GGally)
p <- ggpairs(data, mapping = aes(col=Gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
install.packages("GGally")
library(GGally)
p <- ggpairs(data, mapping = aes(col=Gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
p <- ggpairs(data, mapping = aes(col=Gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(GGally)
p <- ggpairs(data, mapping = aes(col=Gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p
lm(Points ~ Gender+Age+Deep, data=data)
linear <- lm(Points ~ Gender+Age+Deep, data=data)
summary(linear)
linear <- lm(Points ~ Gender+Age+Deep, data=data)
summary(linear)
plot(linear)
lm(Points~Gender)
lm(Points~Gender, data=data)
linear <- lm(Points ~ Gender+Age+Deep, data=data)
summary(linear)
test <-
lm(Points~Gender, data=data)
test
summary(test)
summary(lm(Points~Gender, data=data))
summary(lm(Points~Age, data=data))
summary(lm(Points~Deep, data=data))
summary(lm(Points~strategic_columns, data=data))
summary(lm(Points~Stra, data=data))
summary(lm(Points~Surf, data=data))
names(data)
summary(lm(Points~Surf+Deep+Stra, data=data))
summary(lm(Points~Gender, data=data))
summary(lm(Points~Age, data=data))
lm(Points~Deep+Stra+Surf, data=data)
linear <- lm(Points ~ Gender+Age+Deep, data=data)
summary(linear)
lm(Points~Deep+Stra+Surf, data=data)
summary(lm(Points~Deep+Stra+Surf, data=data)=
summary(lm(Points~Deep+Stra+Surf, data=data))
lm(Points~Deep+Stra+Surf, data=data)
linear <- lm(Points ~ Gender+Age+Deep, data=data)
summary(linear)
summary(lm(Points~Deep+Stra+Surf, data=data))
lm(Points~Gender, data=data)
linear <- lm(Points ~ Gender+Age+Deep, data=data)
summary(linear)
summary(lm(Points~Gender, data=data))
summary(lm(Points~Age, data=data))
summary(lm(Points~Deep+Stra+Surf, data=data))
summary(lm(Points~Deep, data=data))
summary(lm(Points~Surf, data=data))
summary(lm(Points~Deep, data=data))
summary(lm(Points~Surf, data=data))
summary(lm(Points~Stra, data=data))
summary(lm(Points~Stra, data=data))
points_stra <- (lm(Points~Stra, data=data))
summary(points_stra)
plot(points_stra)
lm(Points~Gender, data=data)
linear <- lm(Points ~ Gender+Age+Attitude, data=data)
summary(linear)
summary(lm(Points~Attitude+Stra+Surf, data=data))
plot(linear)
summary(lm(Points~Attitude+Stra, data=data))
plot.lm(linear)
?plot.lm
ggplot(linear)
ggplot(data, x=points, y=attitude)+geom_points()+geom_smooth(method="lm")
ggplot(data, x=points, y=attitude)+geom_point()+geom_smooth(method="lm")
ggplot(data, x=Points, y=Attitude)+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Attitude))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Age))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Gender))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Stra))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=deep_columns))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Deep))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Attitude))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Attitude))+geom_point()+geom_smooth(method="lm")
summary(lm(Points~Attitude+Stra+Surf, data=data))
summary(lm(Points~Attitude+Stra+Deep, data=data))
linear <- lm(Points~Attitude+Stra+Deep, data=data))
linear <- lm(Points~Attitude+Stra+Deep, data=data)
plot(linear)
linear <- lm(Points~Attitude+Stra+Deep, data=data)
par(mfrow = c(2,2))
plot(linear)
linear <- lm(Points~Attitude+Stra+Deep, data=data)
par(mfrow = c(2,2))
plot(linear, which = c(1,2,4)
linear <- lm(Points~Attitude+Stra+Deep, data=data)
par(mfrow = c(2,2))
plot(linear, which = c(1,2,4))
linear <- lm(Points~Attitude+Stra+Deep, data=data)
par(mfrow = c(2,2))
plot(linear, which = c(1,2,5))
leverage.plots(linear)
# Influential Observations
# added variable plots
av.Plots(linear)
ggplot(data, aes(x=Points, y=Attitude+Stra+Deep))+geom_point()+geom_smooth(method="lm")
ggplot(data, aes(x=Points, y=Attitude+Stra+Deep))+geom_point()+geom_smooth(method="lm")+labs(title="Linear regression of  points and attitude+stra+deep")
data2 <- filter(data, points > 0)
library(dplyr)
data2 <- filter(data, points > 0)
library(dplyr)
data2 <- filter(data, Points > 0)
ggplot(data2, aes(x=Points, y=Attitude+Stra+Deep))+geom_point()+geom_smooth(method="lm")+labs(title="Linear regression of  points and attitude+stra+deep")
linear <- lm(Points~Attitude+Stra+Deep, data=data)
par(mfrow = c(2,2))
plot(linear, which = c(1,2,5))
library(dplyr)
data2 <- filter(data, Points > 0)
ggplot(data2, aes(x=Points, y=Attitude+Stra+Deep))+geom_point()+geom_smooth(method="lm")+labs(title="Linear regression of  points and attitude+stra+deep")
linear <- lm(Points~Attitude+Stra+Deep, data=data)
summary(linear)
par(mfrow = c(2,2))
plot(linear, which = c(1,2,5))
library(dplyr)
data2 <- filter(data, Points > 0)
ggplot(data2, aes(x=Points, y=Attitude+Stra+Deep))+geom_point()+geom_smooth(method="lm")+labs(title="Linear regression of  points and attitude+stra+deep")
linear2 <- lm(Points~Attitude+Stra+Deep, data=data2)
summary(linear2)
par(mfrow = c(2,2))
plot(linear2, which = c(1,2,5))
#Pie chart of gender
ggplot(data, aes(x=factor(1), fill = factor(Gender)))+geom_bar(width=1)+coord_polar(theta="y")+theme_void()labs(title="Gender")
#Pie chart of gender
ggplot(data, aes(x=factor(1), fill = factor(Gender)))+geom_bar(width=1)+coord_polar(theta="y")+theme_void()+labs(title="Gender")
#Linear regression of Attitude and Points
ggplot(data, aes(x = Attitude, y = Points)) + geom_point() + geom_smooth(method="lm")+labs(title="Linear regression of attitude and points")
#Linear regression of Attitude and Points
ggplot(data, aes(x = Attitude, y = Points)) + geom_point() + geom_smooth(method="lm")+labs(title="Linear regression of attitude and points")
cor.test(data$Attitude, data$Points, method="Pearson")
#Linear regression of Attitude and Points
ggplot(data, aes(x = Attitude, y = Points)) + geom_point() + geom_smooth(method="lm")+labs(title="Linear regression of attitude and points")
cor.test(data$Attitude, data$Points, method="pearson")
